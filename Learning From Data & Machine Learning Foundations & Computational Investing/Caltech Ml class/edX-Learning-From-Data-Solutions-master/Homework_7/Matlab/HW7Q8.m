% Script for running Q8-Q10 of HW7
% Matlab Optimization toolbox is required
% Written by kanhua


clear all;

% Change the total test times N and the number of training samples here
totalTests=1000;
trainingSampleNumber=10;

count=0; %count the times that gsvm performs better than gpla
svmNumber=zeros(1,totalTests);
k=1;
while k<=totalTests
    %initalise a problem space
    prob=twoDimProb(trainingSampleNumber);
   
    ag=PLAAgent(prob);
    ag.learningFromData(prob,1000,[0;0;0]);

    prob.learnedWeight=ag.learnedWeight;

    % Run support vector machine
    [alpha,learnedWeightBySVM,b]=runSVM(prob.sampleX,prob.sampleY,@basicKernel);
    svmNumber(k)=length(alpha(abs(alpha)>1e-3)); %select alpha>0;
    
    % skip this loop if no support vector is found when doing QP,
    % essentially discard this trial and skip to the next loop
    if svmNumber(k)==0
        continue;
    end
   
    plaEout=prob.calcEout(1000,'frac');
    
    %substitute the learned weights in the problem class again, and
    %calculate Eout of the learned wights generated by SVM
    prob.learnedWeight=[b;learnedWeightBySVM];
    svmEout=prob.calcEout(1000,'frac');
   
    if svmEout<plaEout
        count=count+1;
    end
    
    k=k+1;
end

disp('probability that gsvm does better than gpla:');
disp(count/totalTests);
disp('average support vector number:');
disp(mean(svmNumber));