function [Ein] = nonlinQ8()

%Save the file as nonlinQ8.m
%This code will give you the answer to the solution, if you want to
%visualize the problem uncomment the last part which includes the plot
%command

%Generate 1000 Training examples
x = ones(1000,1);
y = zeros(1000,2);
    for n=1:1000
        x(n,2)=random('uniform',-1,1);
        x(n,3)=random('uniform',-1,1);
    end
    
%classify the points based on the target function given
    for n=1:1000
        if x(n,2)>sqrt(0.6)||x(n,2)<-sqrt(0.6)
            y(n,1)=-1;
            y(n,2)=-850;
        elseif x(n,3)>sqrt(-(x(n,2)^(2))+0.6)||x(n,3)<-sqrt(-(x(n,2)^(2))+0.6)
            y(n,1)=-1;
            y(n,2)=-850;
        else
            y(n,1)=1;
            y(n,2)=-4250;
        end
    end
    
    
% 10% Error noise
randnum = randperm(1000,100);
    for n=1:100
        if y(randnum(1,n),1)==1
            y(randnum(1,n),1)=-1;
            y(randnum(1,n),2)=-850;
        else
            y(randnum(1,n),1)=1;
            y(randnum(1,n),2)=-4250;
        end
    end
    
% Linear regression

    %weights
    
    xt=x.';
    xtemp = xt*x;
    xtemp=inv(xtemp);
    xtemp=xtemp*xt;
    w = xtemp*y(:,1);
    
    %Regression line
    yreg = -(w(1,1)/w(3,1))-(w(2,1)/w(3,1))*(x(:,2));
    
    %Classify points based on regression line
    yregclass=zeros(1000,1);
    for n=1:1000
        if x(n,3)>=yreg(n,1)
            yregclass(n,1) = 1;
        else
            yregclass(n,1) = -1;
        end
    end
    
    %Compute missclassified points
    counter = 0;
    for n=1:1000
        if yregclass(n,1)~=y(n,1)
        counter = counter+1;
        end
    end
    
    %Ein
    Ein=counter/1000;
    
    
    

    %plot the points
    
    %Uncomment these:
    
    %plot(x(:,2),yreg);
    %hold on;
    %scatter(x(:,2),x(:,3),25,y(:,2),'filled');
    %hold off;



end
